from crypto_engine import CryptoCube
from random import choice
import time
from magiccube import Cube as mCube

KEY_CUBE = mCube(3, "BYGWYYBBRYGWRRGORGRRWYGOYWBGRYGOWOYORBROBWBOGOBYGWOWBW")

def main(): 
    
    def generate_test_case(symbols):
        return "".join(choice(symbols) for _ in range(24))
    N = 10_000
    total_encrypt_time = 0
    total_decrypt_time = 0
    for i in range(N):
        print(f"run {i+1}/{N} ... Strted")
        cryptic_cube = CryptoCube(KEY_CUBE)
        test_case = generate_test_case("ABCDEFGHIJKLMNOPQRSTUVWXYZ ")
        start1 = time.time()
        A_moves, ciphertext = cryptic_cube.encrypt(test_case)
        end = time.time()
        start2 = time.time()
        plaintext = cryptic_cube.decrypt(A_moves, ciphertext)
        end2 = time.time()
        total_encrypt_time += (end - start1)
        total_decrypt_time += (end2 - start2)
        print(f"run {i+1}/{N} ({(i+1)/N:.2f}%) ... ended")
        
    print(f"Average encryption time over {N} runs: {total_encrypt_time / N:.6f} seconds")
    print(f"Average decryption time over {N} runs: {total_decrypt_time / N:.6f} seconds")
    print(f"Total encryption time over {N} runs: {total_encrypt_time:.6f} seconds")
    print(f"Total decryption time over {N} runs: {total_decrypt_time:.6f} seconds")
        
if __name__ == "__main__":
    main()